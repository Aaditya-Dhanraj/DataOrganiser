{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Table, Tag, Space } from \"antd\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\n\nconst AllDomain = () => {\n  const data = [{\n    key: \"1\",\n    firstName: \"John\",\n    lastName: \"Brown\",\n    age: 32,\n    address: \"New York No. 1 Lake Park\",\n    tags: [\"nice\", \"developer\"]\n  }, {\n    key: \"2\",\n    firstName: \"Jim\",\n    lastName: \"Green\",\n    age: 42,\n    address: \"London No. 1 Lake Park\",\n    tags: [\"loser\"]\n  }, {\n    key: \"3\",\n    firstName: \"Joell\",\n    lastName: \"Black\",\n    age: 32,\n    address: \"Sidney No. 1 Lake Park\",\n    tags: [\"cool\", \"teacher\"]\n  }];\n  return __jsx(\"div\", null, __jsx(Table, {\n    dataSource: data\n  }, __jsx(ColumnGroup, {\n    title: \"Name\"\n  }, __jsx(Column, {\n    title: \"First Name\",\n    dataIndex: \"firstName\",\n    key: \"firstName\"\n  }), __jsx(Column, {\n    title: \"Last Name\",\n    dataIndex: \"lastName\",\n    key: \"lastName\"\n  })), __jsx(Column, {\n    title: \"Age\",\n    dataIndex: \"age\",\n    key: \"age\"\n  }), __jsx(Column, {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\"\n  }), __jsx(Column, {\n    title: \"Tags\",\n    dataIndex: \"tags\",\n    key: \"tags\",\n    render: tags => __jsx(React.Fragment, null, tags.map(tag => {\n      let color = tag.length > 5 ? \"geekblue\" : \"green\";\n\n      if (tag === \"loser\") {\n        color = \"volcano\";\n      }\n\n      return __jsx(Tag, {\n        color: color,\n        key: tag\n      }, tag.toUpperCase());\n    }))\n  }), __jsx(Column, {\n    title: \"Action\",\n    key: \"action\",\n    render: (text, record) => __jsx(Space, {\n      size: \"middle\"\n    }, __jsx(\"a\", null, \"View\"), __jsx(\"a\", null, \"Edit\"), __jsx(\"a\", null, \"Delete\"))\n  })));\n};\n\nexport default AllDomain;","map":{"version":3,"sources":["C:/Users/hp/Desktop/webD course 2020/internship/avanzar/1. Domain Handler/wieldy-v-2.3.0/next-js-jwt-stater-kit/routes/AllDomain/index.js"],"names":["React","Table","Tag","Space","Column","ColumnGroup","AllDomain","data","key","firstName","lastName","age","address","tags","map","tag","color","length","toUpperCase","text","record"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,KAArB,QAAkC,MAAlC;AACA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAA0BJ,KAAhC;;AAEA,MAAMK,SAAS,GAAG,MAAM;AACtB,QAAMC,IAAI,GAAG,CACX;AACEC,IAAAA,GAAG,EAAE,GADP;AAEEC,IAAAA,SAAS,EAAE,MAFb;AAGEC,IAAAA,QAAQ,EAAE,OAHZ;AAIEC,IAAAA,GAAG,EAAE,EAJP;AAKEC,IAAAA,OAAO,EAAE,0BALX;AAMEC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,WAAT;AANR,GADW,EASX;AACEL,IAAAA,GAAG,EAAE,GADP;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,QAAQ,EAAE,OAHZ;AAIEC,IAAAA,GAAG,EAAE,EAJP;AAKEC,IAAAA,OAAO,EAAE,wBALX;AAMEC,IAAAA,IAAI,EAAE,CAAC,OAAD;AANR,GATW,EAiBX;AACEL,IAAAA,GAAG,EAAE,GADP;AAEEC,IAAAA,SAAS,EAAE,OAFb;AAGEC,IAAAA,QAAQ,EAAE,OAHZ;AAIEC,IAAAA,GAAG,EAAE,EAJP;AAKEC,IAAAA,OAAO,EAAE,wBALX;AAMEC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,SAAT;AANR,GAjBW,CAAb;AA2BA,SACE,mBACE,MAAC,KAAD;AAAO,IAAA,UAAU,EAAEN;AAAnB,KACE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAC;AAAnB,KACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,YAAd;AAA2B,IAAA,SAAS,EAAC,WAArC;AAAiD,IAAA,GAAG,EAAC;AAArD,IADF,EAEE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,SAAS,EAAC,UAApC;AAA+C,IAAA,GAAG,EAAC;AAAnD,IAFF,CADF,EAKE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,SAAS,EAAC,KAA9B;AAAoC,IAAA,GAAG,EAAC;AAAxC,IALF,EAME,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,SAAlC;AAA4C,IAAA,GAAG,EAAC;AAAhD,IANF,EAOE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,GAAG,EAAC,MAHN;AAIE,IAAA,MAAM,EAAGM,IAAD,IACN,4BACGA,IAAI,CAACC,GAAL,CAAUC,GAAD,IAAS;AACjB,UAAIC,KAAK,GAAGD,GAAG,CAACE,MAAJ,GAAa,CAAb,GAAiB,UAAjB,GAA8B,OAA1C;;AACA,UAAIF,GAAG,KAAK,OAAZ,EAAqB;AACnBC,QAAAA,KAAK,GAAG,SAAR;AACD;;AACD,aACE,MAAC,GAAD;AAAK,QAAA,KAAK,EAAEA,KAAZ;AAAmB,QAAA,GAAG,EAAED;AAAxB,SACGA,GAAG,CAACG,WAAJ,EADH,CADF;AAKD,KAVA,CADH;AALJ,IAPF,EA2BE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,GAAG,EAAC,QAFN;AAGE,IAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,KACN,MAAC,KAAD;AAAO,MAAA,IAAI,EAAC;AAAZ,OACE,wBADF,EAEE,wBAFF,EAGE,0BAHF;AAJJ,IA3BF,CADF,CADF;AA2CD,CAvED;;AAyEA,eAAed,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nconst AllDomain = () => {\r\n  const data = [\r\n    {\r\n      key: \"1\",\r\n      firstName: \"John\",\r\n      lastName: \"Brown\",\r\n      age: 32,\r\n      address: \"New York No. 1 Lake Park\",\r\n      tags: [\"nice\", \"developer\"],\r\n    },\r\n    {\r\n      key: \"2\",\r\n      firstName: \"Jim\",\r\n      lastName: \"Green\",\r\n      age: 42,\r\n      address: \"London No. 1 Lake Park\",\r\n      tags: [\"loser\"],\r\n    },\r\n    {\r\n      key: \"3\",\r\n      firstName: \"Joell\",\r\n      lastName: \"Black\",\r\n      age: 32,\r\n      address: \"Sidney No. 1 Lake Park\",\r\n      tags: [\"cool\", \"teacher\"],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Table dataSource={data}>\r\n        <ColumnGroup title=\"Name\">\r\n          <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\r\n          <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\" />\r\n        </ColumnGroup>\r\n        <Column title=\"Age\" dataIndex=\"age\" key=\"age\" />\r\n        <Column title=\"Address\" dataIndex=\"address\" key=\"address\" />\r\n        <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={(tags) => (\r\n            <>\r\n              {tags.map((tag) => {\r\n                let color = tag.length > 5 ? \"geekblue\" : \"green\";\r\n                if (tag === \"loser\") {\r\n                  color = \"volcano\";\r\n                }\r\n                return (\r\n                  <Tag color={color} key={tag}>\r\n                    {tag.toUpperCase()}\r\n                  </Tag>\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        />\r\n        <Column\r\n          title=\"Action\"\r\n          key=\"action\"\r\n          render={(text, record) => (\r\n            <Space size=\"middle\">\r\n              <a>View</a>\r\n              <a>Edit</a>\r\n              <a>Delete</a>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllDomain;\r\n"]},"metadata":{},"sourceType":"module"}