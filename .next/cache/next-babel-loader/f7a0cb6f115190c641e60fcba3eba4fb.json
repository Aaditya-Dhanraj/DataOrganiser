{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Select } from \"antd\";\nimport Router from \"next/router\";\nconst {\n  Option\n} = Select;\nimport { useRouter } from \"next/router\";\n\nconst Update = () => {\n  const router = useRouter();\n  const {\n    query: {\n      updateID\n    }\n  } = router;\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: status,\n    1: setStatus\n  } = useState(\"\");\n  const {\n    0: Da,\n    1: setDA\n  } = useState(\"\");\n  const {\n    0: Dr,\n    1: setDR\n  } = useState(\"\");\n  const {\n    0: Url,\n    1: setURL\n  } = useState(\"\");\n  const {\n    0: quantity,\n    1: setQuantity\n  } = useState(\"\");\n  const {\n    0: linkA,\n    1: setLinkA\n  } = useState(\"\");\n  const {\n    0: linkB,\n    1: setLinkB\n  } = useState(\"\");\n  const {\n    0: linkC,\n    1: setLinkC\n  } = useState(\"\");\n  const {\n    0: linkD,\n    1: setLinkD\n  } = useState(\"\");\n  const {\n    0: linkE,\n    1: setLinkE\n  } = useState(\"\");\n  const {\n    0: linkF,\n    1: setLinkF\n  } = useState(\"\");\n  const {\n    0: linkG,\n    1: setLinkG\n  } = useState(\"\");\n  const {\n    0: linkH,\n    1: setLinkH\n  } = useState(\"\");\n  const {\n    0: linkI,\n    1: setLinkI\n  } = useState(\"\");\n  const {\n    0: linkJ,\n    1: setLinkJ\n  } = useState(\"\");\n  const {\n    0: domainComments,\n    1: setDomainComments\n  } = useState(\"\");\n  const {\n    0: linkType,\n    1: setLinkType\n  } = useState(\"\");\n  const {\n    0: linkAttribute,\n    1: setLinkAttribute\n  } = useState(\"\");\n  const {\n    0: refDomains,\n    1: setRefDomains\n  } = useState(\"\");\n  const {\n    0: industry,\n    1: setIndustry\n  } = useState(\"\");\n  const {\n    0: trafficCountry,\n    1: setTrafficCountry\n  } = useState(\"\");\n  const {\n    0: semrush,\n    1: setSemrush\n  } = useState(\"\");\n  const {\n    0: ahref,\n    1: setAhref\n  } = useState(\"\");\n  const {\n    0: currency,\n    1: setCurrency\n  } = useState(\"\");\n  const {\n    0: original,\n    1: setOriginal\n  } = useState(\"\");\n  const {\n    0: negotiated,\n    1: setNegotiated\n  } = useState(\"\");\n  const {\n    0: officeCountry,\n    1: setOfficeCountry\n  } = useState(\"\");\n  const {\n    0: costComments,\n    1: setCostComments\n  } = useState(\"\");\n  const {\n    0: contactDetailsName,\n    1: setContactDetailsName\n  } = useState(\"\");\n  const {\n    0: contactEmailA,\n    1: setContactEmailA\n  } = useState(\"\");\n  const {\n    0: contactEmailB,\n    1: setContactEmailB\n  } = useState(\"\");\n  const {\n    0: contactEmailC,\n    1: setContactEmailC\n  } = useState(\"\");\n  const {\n    0: contactPhoneA,\n    1: setContactPhoneA\n  } = useState(\"\");\n  const {\n    0: contactPhoneB,\n    1: setContactPhoneB\n  } = useState(\"\");\n\n  function handleChange(value) {\n    console.log(value, \"value\");\n    setStatus(value);\n  }\n\n  function handleChangeQuality(valueQuality) {\n    console.log(valueQuality, \"quality\");\n    setQuantity(valueQuality);\n  }\n\n  function handleChangeLinkType(valueLinkType) {\n    console.log(valueLinkType, \"linkType\");\n    setLinkType(valueLinkType);\n  }\n\n  function handleChangeLinkAttri(valueLinkAttri) {\n    console.log(valueLinkAttri, \"attribute\");\n    setLinkAttribute(valueLinkAttri);\n  }\n\n  function handleChangeCurr(valuecurr) {\n    console.log(valuecurr, \"currency\");\n    setCurrency(valuecurr);\n  }\n\n  function handleChangeMulti(valueCountry) {\n    console.log(valueCountry, \"industry\");\n    setIndustry(valueCountry.toString());\n  }\n\n  function handleChangeCountry(valueSingle) {\n    console.log(`selected ${valueSingle}`);\n    setOfficeCountry(valueSingle);\n  }\n\n  function handleChangeMultiOne(valueMultiOne) {\n    console.log(valueMultiOne, \"trafficC\");\n    setTrafficCountry(valueMultiOne.toString()); // let obj = { ...FormData };\n    // obj.Domain_traffic_Country = valueMultiOne.toString();\n    // setFormData({ ...obj });\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch(`http://localhost:5000/api/v1/domain/${updateID}`);\n      res.json().then(res => {\n        setData(res); //   console.log(data[0]);\n\n        setName(data[0].Domain_Name);\n        setStatus(data[0].Domain_Status);\n        setDA(data[0].Domain_DA);\n        setDR(data[0].Domain_DR);\n        setURL(data[0].Domain_URL);\n        setQuantity(data[0].Domain_Quality);\n        setLinkA(data[0].Domain_Link_SampleA);\n        setLinkB(data[0].Domain_Link_SampleB);\n        setLinkC(data[0].Domain_Link_SampleC);\n        setLinkD(data[0].Domain_Link_SampleD);\n        setLinkE(data[0].Domain_Link_SampleE);\n        setLinkF(data[0].Domain_Link_SampleF);\n        setLinkG(data[0].Domain_Link_SampleG);\n        setLinkH(data[0].Domain_Link_SampleH);\n        setLinkI(data[0].Domain_Link_SampleI);\n        setLinkJ(data[0].Domain_Link_SampleJ);\n        setDomainComments(data[0].Domain_Comments);\n        setLinkType(data[0].Domain_Link_Type);\n        setLinkAttribute(data[0].Domain_Link_Attribute);\n        setRefDomains(data[0].Domain_RefDomCount);\n        setIndustry(data[0].Domain_Industry);\n        setTrafficCountry(data[0].Domain_traffic_Country);\n        setSemrush(data[0].Domain_SEMRush);\n        setAhref(data[0].Domain_AHRef);\n        setCurrency(data[0].Domain_Currency);\n        setOriginal(data[0].Domain_Cost_Original);\n        setNegotiated(data[0].Domain_Cost_Nego);\n        setOfficeCountry(data[0].Domain_Office_Country);\n        setCostComments(data[0].Domain_Cost_Comments);\n        setContactDetailsName(data[0].Domain_Contact_Person);\n        setContactEmailA(data[0].Domain_Contact_EmailA);\n        setContactEmailB(data[0].Domain_Contact_EmailB);\n        setContactEmailC(data[0].Domain_Contact_EmailC);\n        setContactPhoneA(data[0].Domain_Contact_PhoneA);\n        setContactPhoneB(data[0].Domain_Contact_PhoneB);\n      }).catch(err => console.log(err));\n    }\n\n    fetchData();\n  }, []);\n\n  const postData = () => {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        Domain_Name: name,\n        Domain_Status: status,\n        Domain_DA: Da,\n        Domain_DR: Dr,\n        Domain_URL: Url,\n        Domain_Quality: quantity,\n        Domain_Link_SampleA: linkA,\n        Domain_Link_SampleB: linkB,\n        Domain_Link_SampleC: linkC,\n        Domain_Link_SampleD: linkD,\n        Domain_Link_SampleE: linkE,\n        Domain_Link_SampleF: linkF,\n        Domain_Link_SampleG: linkG,\n        Domain_Link_SampleH: linkH,\n        Domain_Link_SampleI: linkI,\n        Domain_Link_SampleJ: linkJ,\n        Domain_Comments: domainComments,\n        Domain_Link_Type: linkType,\n        Domain_Link_Attribute: linkAttribute,\n        Domain_RefDomCount: refDomains,\n        Domain_Industry: industry,\n        Domain_traffic_Country: trafficCountry,\n        Domain_SEMRush: semrush,\n        Domain_AHRef: ahref,\n        Domain_Currency: currency,\n        Domain_Cost_Original: original,\n        Domain_Cost_Nego: negotiated,\n        Domain_Office_Country: officeCountry,\n        Domain_Cost_Comments: costComments,\n        Domain_Contact_Person: contactDetailsName,\n        Domain_Contact_EmailA: contactEmailA,\n        Domain_Contact_EmailB: contactEmailB,\n        Domain_Contact_EmailC: contactEmailC,\n        Domain_Contact_PhoneA: contactPhoneA,\n        Domain_Contact_PhoneB: contactPhoneB\n      })\n    };\n    fetch(\"http://localhost:5000/api/v1/domain/\", requestOptions).then(async response => {\n      const data = await response.json();\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      console.log(\"data updated successfully\");\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error(\"There was an error!\", error);\n    });\n    Router.push(\"all_domain\");\n  };\n\n  return __jsx(\"div\", null, console.log(updateID, \"ye hai query\"));\n};\n\nexport default Update;","map":{"version":3,"sources":["C:/Users/hp/Desktop/webD course 2020/internship/avanzar/1. Domain Handler/wieldy-v-2.3.0/next-js-jwt-stater-kit/routes/Update/index.js"],"names":["React","useEffect","useState","Select","Router","Option","useRouter","Update","router","query","updateID","data","setData","name","setName","status","setStatus","Da","setDA","Dr","setDR","Url","setURL","quantity","setQuantity","linkA","setLinkA","linkB","setLinkB","linkC","setLinkC","linkD","setLinkD","linkE","setLinkE","linkF","setLinkF","linkG","setLinkG","linkH","setLinkH","linkI","setLinkI","linkJ","setLinkJ","domainComments","setDomainComments","linkType","setLinkType","linkAttribute","setLinkAttribute","refDomains","setRefDomains","industry","setIndustry","trafficCountry","setTrafficCountry","semrush","setSemrush","ahref","setAhref","currency","setCurrency","original","setOriginal","negotiated","setNegotiated","officeCountry","setOfficeCountry","costComments","setCostComments","contactDetailsName","setContactDetailsName","contactEmailA","setContactEmailA","contactEmailB","setContactEmailB","contactEmailC","setContactEmailC","contactPhoneA","setContactPhoneA","contactPhoneB","setContactPhoneB","handleChange","value","console","log","handleChangeQuality","valueQuality","handleChangeLinkType","valueLinkType","handleChangeLinkAttri","valueLinkAttri","handleChangeCurr","valuecurr","handleChangeMulti","valueCountry","toString","handleChangeCountry","valueSingle","handleChangeMultiOne","valueMultiOne","fetchData","res","fetch","json","then","Domain_Name","Domain_Status","Domain_DA","Domain_DR","Domain_URL","Domain_Quality","Domain_Link_SampleA","Domain_Link_SampleB","Domain_Link_SampleC","Domain_Link_SampleD","Domain_Link_SampleE","Domain_Link_SampleF","Domain_Link_SampleG","Domain_Link_SampleH","Domain_Link_SampleI","Domain_Link_SampleJ","Domain_Comments","Domain_Link_Type","Domain_Link_Attribute","Domain_RefDomCount","Domain_Industry","Domain_traffic_Country","Domain_SEMRush","Domain_AHRef","Domain_Currency","Domain_Cost_Original","Domain_Cost_Nego","Domain_Office_Country","Domain_Cost_Comments","Domain_Contact_Person","Domain_Contact_EmailA","Domain_Contact_EmailB","Domain_Contact_EmailC","Domain_Contact_PhoneA","Domain_Contact_PhoneB","catch","err","postData","requestOptions","method","headers","body","JSON","stringify","response","ok","error","message","Promise","reject","setState","errorMessage","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Select } from \"antd\";\r\nimport Router from \"next/router\";\r\nconst { Option } = Select;\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst Update = () => {\r\n  const router = useRouter();\r\n\r\n  const {\r\n    query: { updateID },\r\n  } = router;\r\n\r\n  const [data, setData] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [Da, setDA] = useState(\"\");\r\n  const [Dr, setDR] = useState(\"\");\r\n  const [Url, setURL] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [linkA, setLinkA] = useState(\"\");\r\n  const [linkB, setLinkB] = useState(\"\");\r\n  const [linkC, setLinkC] = useState(\"\");\r\n  const [linkD, setLinkD] = useState(\"\");\r\n  const [linkE, setLinkE] = useState(\"\");\r\n  const [linkF, setLinkF] = useState(\"\");\r\n  const [linkG, setLinkG] = useState(\"\");\r\n  const [linkH, setLinkH] = useState(\"\");\r\n  const [linkI, setLinkI] = useState(\"\");\r\n  const [linkJ, setLinkJ] = useState(\"\");\r\n  const [domainComments, setDomainComments] = useState(\"\");\r\n  const [linkType, setLinkType] = useState(\"\");\r\n  const [linkAttribute, setLinkAttribute] = useState(\"\");\r\n  const [refDomains, setRefDomains] = useState(\"\");\r\n  const [industry, setIndustry] = useState(\"\");\r\n  const [trafficCountry, setTrafficCountry] = useState(\"\");\r\n  const [semrush, setSemrush] = useState(\"\");\r\n  const [ahref, setAhref] = useState(\"\");\r\n  const [currency, setCurrency] = useState(\"\");\r\n  const [original, setOriginal] = useState(\"\");\r\n  const [negotiated, setNegotiated] = useState(\"\");\r\n  const [officeCountry, setOfficeCountry] = useState(\"\");\r\n  const [costComments, setCostComments] = useState(\"\");\r\n  const [contactDetailsName, setContactDetailsName] = useState(\"\");\r\n  const [contactEmailA, setContactEmailA] = useState(\"\");\r\n  const [contactEmailB, setContactEmailB] = useState(\"\");\r\n  const [contactEmailC, setContactEmailC] = useState(\"\");\r\n  const [contactPhoneA, setContactPhoneA] = useState(\"\");\r\n  const [contactPhoneB, setContactPhoneB] = useState(\"\");\r\n\r\n  function handleChange(value) {\r\n    console.log(value, \"value\");\r\n    setStatus(value);\r\n  }\r\n\r\n  function handleChangeQuality(valueQuality) {\r\n    console.log(valueQuality, \"quality\");\r\n    setQuantity(valueQuality);\r\n  }\r\n  function handleChangeLinkType(valueLinkType) {\r\n    console.log(valueLinkType, \"linkType\");\r\n    setLinkType(valueLinkType);\r\n  }\r\n\r\n  function handleChangeLinkAttri(valueLinkAttri) {\r\n    console.log(valueLinkAttri, \"attribute\");\r\n    setLinkAttribute(valueLinkAttri);\r\n  }\r\n  function handleChangeCurr(valuecurr) {\r\n    console.log(valuecurr, \"currency\");\r\n    setCurrency(valuecurr);\r\n  }\r\n  function handleChangeMulti(valueCountry) {\r\n    console.log(valueCountry, \"industry\");\r\n    setIndustry(valueCountry.toString());\r\n  }\r\n\r\n  function handleChangeCountry(valueSingle) {\r\n    console.log(`selected ${valueSingle}`);\r\n    setOfficeCountry(valueSingle);\r\n  }\r\n  function handleChangeMultiOne(valueMultiOne) {\r\n    console.log(valueMultiOne, \"trafficC\");\r\n    setTrafficCountry(valueMultiOne.toString());\r\n    // let obj = { ...FormData };\r\n    // obj.Domain_traffic_Country = valueMultiOne.toString();\r\n    // setFormData({ ...obj });\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const res = await fetch(\r\n        `http://localhost:5000/api/v1/domain/${updateID}`\r\n      );\r\n      res\r\n        .json()\r\n        .then((res) => {\r\n          setData(res);\r\n        //   console.log(data[0]);\r\n          setName(data[0].Domain_Name);\r\n          setStatus(data[0].Domain_Status);\r\n          setDA(data[0].Domain_DA);\r\n          setDR(data[0].Domain_DR);\r\n          setURL(data[0].Domain_URL);\r\n          setQuantity(data[0].Domain_Quality);\r\n          setLinkA(data[0].Domain_Link_SampleA);\r\n          setLinkB(data[0].Domain_Link_SampleB);\r\n          setLinkC(data[0].Domain_Link_SampleC);\r\n          setLinkD(data[0].Domain_Link_SampleD);\r\n          setLinkE(data[0].Domain_Link_SampleE);\r\n          setLinkF(data[0].Domain_Link_SampleF);\r\n          setLinkG(data[0].Domain_Link_SampleG);\r\n          setLinkH(data[0].Domain_Link_SampleH);\r\n          setLinkI(data[0].Domain_Link_SampleI);\r\n          setLinkJ(data[0].Domain_Link_SampleJ);\r\n          setDomainComments(data[0].Domain_Comments);\r\n          setLinkType(data[0].Domain_Link_Type);\r\n          setLinkAttribute(data[0].Domain_Link_Attribute);\r\n          setRefDomains(data[0].Domain_RefDomCount);\r\n          setIndustry(data[0].Domain_Industry);\r\n          setTrafficCountry(data[0].Domain_traffic_Country);\r\n          setSemrush(data[0].Domain_SEMRush);\r\n          setAhref(data[0].Domain_AHRef);\r\n          setCurrency(data[0].Domain_Currency);\r\n          setOriginal(data[0].Domain_Cost_Original);\r\n          setNegotiated(data[0].Domain_Cost_Nego);\r\n          setOfficeCountry(data[0].Domain_Office_Country);\r\n          setCostComments(data[0].Domain_Cost_Comments);\r\n          setContactDetailsName(data[0].Domain_Contact_Person);\r\n          setContactEmailA(data[0].Domain_Contact_EmailA);\r\n          setContactEmailB(data[0].Domain_Contact_EmailB);\r\n          setContactEmailC(data[0].Domain_Contact_EmailC);\r\n          setContactPhoneA(data[0].Domain_Contact_PhoneA);\r\n          setContactPhoneB(data[0].Domain_Contact_PhoneB);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const postData = () => {\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        Domain_Name: name,\r\n        Domain_Status: status,\r\n        Domain_DA: Da,\r\n        Domain_DR: Dr,\r\n        Domain_URL: Url,\r\n        Domain_Quality: quantity,\r\n        Domain_Link_SampleA: linkA,\r\n        Domain_Link_SampleB: linkB,\r\n        Domain_Link_SampleC: linkC,\r\n        Domain_Link_SampleD: linkD,\r\n        Domain_Link_SampleE: linkE,\r\n        Domain_Link_SampleF: linkF,\r\n        Domain_Link_SampleG: linkG,\r\n        Domain_Link_SampleH: linkH,\r\n        Domain_Link_SampleI: linkI,\r\n        Domain_Link_SampleJ: linkJ,\r\n        Domain_Comments: domainComments,\r\n        Domain_Link_Type: linkType,\r\n        Domain_Link_Attribute: linkAttribute,\r\n        Domain_RefDomCount: refDomains,\r\n        Domain_Industry: industry,\r\n        Domain_traffic_Country: trafficCountry,\r\n        Domain_SEMRush: semrush,\r\n        Domain_AHRef: ahref,\r\n        Domain_Currency: currency,\r\n        Domain_Cost_Original: original,\r\n        Domain_Cost_Nego: negotiated,\r\n        Domain_Office_Country: officeCountry,\r\n        Domain_Cost_Comments: costComments,\r\n        Domain_Contact_Person: contactDetailsName,\r\n        Domain_Contact_EmailA: contactEmailA,\r\n        Domain_Contact_EmailB: contactEmailB,\r\n        Domain_Contact_EmailC: contactEmailC,\r\n        Domain_Contact_PhoneA: contactPhoneA,\r\n        Domain_Contact_PhoneB: contactPhoneB,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:5000/api/v1/domain/\", requestOptions)\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          // get error message from body or default to response status\r\n          const error = (data && data.message) || response.status;\r\n          return Promise.reject(error);\r\n        }\r\n        console.log(\"data updated successfully\");\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ errorMessage: error.toString() });\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n    Router.push(\"all_domain\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {console.log(updateID, \"ye hai query\")}\r\n     {}\r\n    </div>\r\n  );\r\n};\r\nexport default Update;\r\n"]},"metadata":{},"sourceType":"module"}