{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Table, Tag, Space } from \"antd\";\nvar Column = Table.Column,\n    ColumnGroup = Table.ColumnGroup;\n\nvar AllDomain = function AllDomain() {\n  var columns = [{\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"Age\",\n    dataIndex: \"age\",\n    key: \"age\"\n  }, {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\"\n  }, {\n    title: \"Tags\",\n    key: \"tags\",\n    dataIndex: \"tags\",\n    render: function render(tags) {\n      return __jsx(React.Fragment, null, tags.map(function (tag) {\n        var color = tag.length > 5 ? \"geekblue\" : \"green\";\n\n        if (tag === \"loser\") {\n          color = \"volcano\";\n        }\n\n        return __jsx(Tag, {\n          color: color,\n          key: tag\n        }, tag.toUpperCase());\n      }));\n    }\n  }, {\n    title: \"Action\",\n    key: \"action\",\n    render: function render(text, record) {\n      return __jsx(Space, {\n        size: \"middle\"\n      }, __jsx(\"a\", null, \"View\"), __jsx(\"a\", null, \"Edit\"), __jsx(\"a\", null, \"Delete\"));\n    }\n  }];\n  var data = [{\n    key: '1',\n    firstName: 'John',\n    lastName: 'Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    tags: ['nice', 'developer']\n  }, {\n    key: '2',\n    firstName: 'Jim',\n    lastName: 'Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    tags: ['loser']\n  }, {\n    key: '3',\n    firstName: 'Joe',\n    lastName: 'Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n    tags: ['cool', 'teacher']\n  }];\n  return __jsx(\"div\", null, __jsx(Table, {\n    dataSource: data\n  }, __jsx(ColumnGroup, {\n    title: \"Name\"\n  }, __jsx(Column, {\n    title: \"First Name\",\n    dataIndex: \"firstName\",\n    key: \"firstName\"\n  }), __jsx(Column, {\n    title: \"Last Name\",\n    dataIndex: \"lastName\",\n    key: \"lastName\"\n  })), __jsx(Column, {\n    title: \"Age\",\n    dataIndex: \"age\",\n    key: \"age\"\n  }), __jsx(Column, {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\"\n  }), __jsx(Column, {\n    title: \"Tags\",\n    dataIndex: \"tags\",\n    key: \"tags\",\n    render: function render(tags) {\n      return __jsx(React.Fragment, null, tags.map(function (tag) {\n        return __jsx(Tag, {\n          color: \"blue\",\n          key: tag\n        }, tag);\n      }));\n    }\n  }), __jsx(Column, {\n    title: \"Action\",\n    key: \"action\",\n    render: function render(text, record) {\n      return __jsx(Space, {\n        size: \"middle\"\n      }, __jsx(\"a\", null, \"Invite \", record.lastName), __jsx(\"a\", null, \"Delete\"));\n    }\n  })));\n};\n\n_c = AllDomain;\nexport default AllDomain;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllDomain\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/webD course 2020/internship/avanzar/1. Domain Handler/wieldy-v-2.3.0/next-js-jwt-stater-kit/routes/AllDomain/index.js"],"names":["React","Table","Tag","Space","Column","ColumnGroup","AllDomain","columns","title","dataIndex","key","render","tags","map","tag","color","length","toUpperCase","text","record","data","firstName","lastName","age","address"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nconst AllDomain = () => {\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n\t},\r\n    {\r\n      title: \"Age\",\r\n      dataIndex: \"age\",\r\n      key: \"age\",\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      dataIndex: \"address\",\r\n      key: \"address\",\r\n    },\r\n    {\r\n      title: \"Tags\",\r\n      key: \"tags\",\r\n      dataIndex: \"tags\",\r\n      render: (tags) => (\r\n        <>\r\n          {tags.map((tag) => {\r\n            let color = tag.length > 5 ? \"geekblue\" : \"green\";\r\n            if (tag === \"loser\") {\r\n              color = \"volcano\";\r\n            }\r\n            return (\r\n              <Tag color={color} key={tag}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <a>View</a>\r\n          <a>Edit</a>\r\n          <a>Delete</a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n\r\n  const data = [\r\n\t{\r\n\t  key: '1',\r\n\t  firstName: 'John',\r\n\t  lastName: 'Brown',\r\n\t  age: 32,\r\n\t  address: 'New York No. 1 Lake Park',\r\n\t  tags: ['nice', 'developer'],\r\n\t},\r\n\t{\r\n\t  key: '2',\r\n\t  firstName: 'Jim',\r\n\t  lastName: 'Green',\r\n\t  age: 42,\r\n\t  address: 'London No. 1 Lake Park',\r\n\t  tags: ['loser'],\r\n\t},\r\n\t{\r\n\t  key: '3',\r\n\t  firstName: 'Joe',\r\n\t  lastName: 'Black',\r\n\t  age: 32,\r\n\t  address: 'Sidney No. 1 Lake Park',\r\n\t  tags: ['cool', 'teacher'],\r\n\t},\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Table dataSource={data}>\r\n    <ColumnGroup title=\"Name\">\r\n      <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\r\n      <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\" />\r\n    </ColumnGroup>\r\n    <Column title=\"Age\" dataIndex=\"age\" key=\"age\" />\r\n    <Column title=\"Address\" dataIndex=\"address\" key=\"address\" />\r\n    <Column\r\n      title=\"Tags\"\r\n      dataIndex=\"tags\"\r\n      key=\"tags\"\r\n      render={tags => (\r\n        <>\r\n          {tags.map(tag => (\r\n            <Tag color=\"blue\" key={tag}>\r\n              {tag}\r\n            </Tag>\r\n          ))}\r\n        </>\r\n      )}\r\n    />\r\n    <Column\r\n      title=\"Action\"\r\n      key=\"action\"\r\n      render={(text, record) => (\r\n        <Space size=\"middle\">\r\n          <a>Invite {record.lastName}</a>\r\n          <a>Delete</a>\r\n        </Space>\r\n      )}\r\n    />\r\n  </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllDomain;\r\n"]},"metadata":{},"sourceType":"module"}