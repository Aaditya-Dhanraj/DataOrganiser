{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { Cookies } from \"react-cookie\";\nimport { fetchStart, fetchSuccess, setAUthToken } from \"../redux/actions\";\nimport jwtAxios from './Api';\nimport { SET_AUTH_USER_DATA, UPDATE_LOAD_USER } from \"../constants/ActionTypes\";\nexport const useAuthToken = () => {\n  const dispatch = useDispatch();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    user\n  } = useSelector(({\n    auth\n  }) => auth);\n  useEffect(() => {\n    const validateAuth = async () => {\n      dispatch(fetchStart());\n      const cookies = new Cookies();\n      const token = cookies.get(\"token\");\n      console.log(\"token: =====>\", token);\n\n      if (!token) {\n        dispatch(fetchSuccess());\n        return;\n      }\n\n      dispatch(setAUthToken(token));\n\n      try {\n        const {\n          data\n        } = await jwtAxios.post(\"auth/me\");\n        console.log(\"data: \", data);\n        dispatch(fetchSuccess());\n        dispatch({\n          type: SET_AUTH_USER_DATA,\n          payload: data.user\n        });\n        return;\n      } catch (err) {\n        console.log(\"err in auth: \", err);\n        dispatch(fetchSuccess());\n        return;\n      }\n    };\n\n    const checkAuth = () => {\n      Promise.all([validateAuth()]).then(() => {\n        setLoading(false);\n        dispatch({\n          type: UPDATE_LOAD_USER\n        });\n      });\n    };\n\n    checkAuth();\n  }, [dispatch]);\n  return [loading, user];\n};\nexport const useAuthUser = () => {\n  const {\n    user\n  } = useSelector(({\n    auth\n  }) => auth);\n\n  if (user) {\n    return _objectSpread({\n      id: 1\n    }, user);\n  }\n\n  return [null];\n};","map":{"version":3,"sources":["C:/Users/hp/Desktop/webD course 2020/internship/avanzar/1. Domain Handler/wieldy-v-2.3.0/next-js-jwt-stater-kit/util/AppHooks.js"],"names":["useDispatch","useSelector","useEffect","useState","Cookies","fetchStart","fetchSuccess","setAUthToken","jwtAxios","SET_AUTH_USER_DATA","UPDATE_LOAD_USER","useAuthToken","dispatch","loading","setLoading","user","auth","validateAuth","cookies","token","get","console","log","data","post","type","payload","err","checkAuth","Promise","all","then","useAuthUser","id"],"mappings":";;;;;;AAAA,SAAQA,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,SAAQC,UAAR,EAAoBC,YAApB,EAAkCC,YAAlC,QAAqD,kBAArD;AACA,OAAOC,QAAP,MAAqB,OAArB;AACA,SAAQC,kBAAR,EAA4BC,gBAA5B,QAAmD,0BAAnD;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AACjC,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM;AAAA,OAACa,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAACY,IAAAA;AAAD,MAASd,WAAW,CAAC,CAAC;AAACe,IAAAA;AAAD,GAAD,KAAYA,IAAb,CAA1B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AAEf,UAAMe,YAAY,GAAG,YAAY;AAChCL,MAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACA,YAAMa,OAAO,GAAG,IAAId,OAAJ,EAAhB;AACA,YAAMe,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY,OAAZ,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,KAA7B;;AACA,UAAI,CAACA,KAAL,EAAY;AACXP,QAAAA,QAAQ,CAACN,YAAY,EAAb,CAAR;AACA;AACA;;AACDM,MAAAA,QAAQ,CAACL,YAAY,CAACY,KAAD,CAAb,CAAR;;AACA,UAAI;AACH,cAAM;AAACI,UAAAA;AAAD,YAAS,MAAMf,QAAQ,CAACgB,IAAT,CAAc,SAAd,CAArB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,IAAtB;AACAX,QAAAA,QAAQ,CAACN,YAAY,EAAb,CAAR;AACAM,QAAAA,QAAQ,CAAC;AACRa,UAAAA,IAAI,EAAEhB,kBADE;AAERiB,UAAAA,OAAO,EAAEH,IAAI,CAACR;AAFN,SAAD,CAAR;AAIA;AACA,OATD,CASE,OAAOY,GAAP,EAAY;AACbN,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BK,GAA5B;AACAf,QAAAA,QAAQ,CAACN,YAAY,EAAb,CAAR;AACA;AACA;AACD,KAxBD;;AA0BA,UAAMsB,SAAS,GAAG,MAAM;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,CAACb,YAAY,EAAb,CAAZ,EAA8Bc,IAA9B,CAAmC,MAAM;AACxCjB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,QAAAA,QAAQ,CAAC;AAACa,UAAAA,IAAI,EAAEf;AAAP,SAAD,CAAR;AACA,OAHD;AAIA,KALD;;AAMAkB,IAAAA,SAAS;AACT,GAnCQ,EAmCN,CAAChB,QAAD,CAnCM,CAAT;AAqCA,SAAO,CAACC,OAAD,EAAUE,IAAV,CAAP;AACA,CA3CM;AA6CP,OAAO,MAAMiB,WAAW,GAAG,MAAM;AAChC,QAAM;AAACjB,IAAAA;AAAD,MAASd,WAAW,CAAC,CAAC;AAACe,IAAAA;AAAD,GAAD,KAAYA,IAAb,CAA1B;;AAEA,MAAID,IAAJ,EAAU;AACT;AAAQkB,MAAAA,EAAE,EAAE;AAAZ,OAAkBlB,IAAlB;AACA;;AACD,SAAO,CAAC,IAAD,CAAP;AACA,CAPM","sourcesContent":["import {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Cookies} from \"react-cookie\";\r\nimport {fetchStart, fetchSuccess, setAUthToken} from \"../redux/actions\";\r\nimport jwtAxios from './Api'\r\nimport {SET_AUTH_USER_DATA, UPDATE_LOAD_USER} from \"../constants/ActionTypes\";\r\n\r\nexport const useAuthToken = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst {user} = useSelector(({auth}) => auth);\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst validateAuth = async () => {\r\n\t\t\tdispatch(fetchStart());\r\n\t\t\tconst cookies = new Cookies();\r\n\t\t\tconst token = cookies.get(\"token\");\r\n\t\t\tconsole.log(\"token: =====>\", token)\r\n\t\t\tif (!token) {\r\n\t\t\t\tdispatch(fetchSuccess());\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tdispatch(setAUthToken(token));\r\n\t\t\ttry {\r\n\t\t\t\tconst {data} = await jwtAxios.post(\"auth/me\");\r\n\t\t\t\tconsole.log(\"data: \", data)\r\n\t\t\t\tdispatch(fetchSuccess());\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: SET_AUTH_USER_DATA,\r\n\t\t\t\t\tpayload: data.user\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(\"err in auth: \",err)\r\n\t\t\t\tdispatch(fetchSuccess());\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst checkAuth = () => {\r\n\t\t\tPromise.all([validateAuth()]).then(() => {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tdispatch({type: UPDATE_LOAD_USER});\r\n\t\t\t});\r\n\t\t};\r\n\t\tcheckAuth();\r\n\t}, [dispatch]);\r\n\r\n\treturn [loading, user];\r\n};\r\n\r\nexport const useAuthUser = () => {\r\n\tconst {user} = useSelector(({auth}) => auth);\r\n\r\n\tif (user) {\r\n\t\treturn {id: 1, ...user};\r\n\t}\r\n\treturn [null];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}