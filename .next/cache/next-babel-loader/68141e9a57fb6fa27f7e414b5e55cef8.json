{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Table, Tag, Space } from \"antd\";\nvar Column = Table.Column,\n    ColumnGroup = Table.ColumnGroup;\n\nvar AllDomain = function AllDomain() {\n  use;\n  var data = [];\n  return __jsx(\"div\", null, __jsx(Table, {\n    dataSource: data\n  }, __jsx(ColumnGroup, {\n    title: \"Domain Name\"\n  }, __jsx(Column, {\n    title: \"Company\",\n    dataIndex: \"firstName\",\n    key: \"firstName\"\n  }), __jsx(Column, {\n    title: \"Website\",\n    dataIndex: \"lastName\",\n    key: \"lastName\"\n  })), __jsx(Column, {\n    title: \"Status\",\n    dataIndex: \"age\",\n    key: \"age\",\n    render: function render(age) {\n      return __jsx(React.Fragment, null, age.map(function (tag) {\n        var color = tag.length > 6 ? \"volcano\" : \"green\";\n\n        if (tag === \"loser\") {\n          color = \"blue\";\n        }\n\n        return __jsx(Tag, {\n          color: color,\n          key: tag\n        }, tag.toUpperCase());\n      }));\n    }\n  }), __jsx(Column, {\n    title: \"Type\",\n    dataIndex: \"address\",\n    key: \"address\"\n  }), __jsx(ColumnGroup, {\n    title: \"DA | DR\"\n  }, __jsx(Column, {\n    title: \"DA\",\n    dataIndex: \"DA\",\n    key: \"DA\"\n  }), __jsx(Column, {\n    title: \"DR\",\n    dataIndex: \"DR\",\n    key: \"DR\"\n  })), __jsx(Column, {\n    title: \"Quality\",\n    dataIndex: \"address\",\n    key: \"address\"\n  }), __jsx(Column, {\n    title: \"Traffic\",\n    dataIndex: \"address\",\n    key: \"address\"\n  }), __jsx(Column, {\n    title: \"Sample Links\",\n    dataIndex: \"address\",\n    key: \"address\"\n  }), __jsx(Column, {\n    title: \"Action\",\n    key: \"action\",\n    render: function render(text, record) {\n      return __jsx(Space, {\n        size: \"middle\"\n      }, __jsx(\"a\", null, \"View\"), __jsx(\"a\", null, \"Edit\"), __jsx(\"a\", null, \"Delete\"));\n    }\n  })));\n};\n\n_c = AllDomain;\nexport default AllDomain;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllDomain\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/webD course 2020/internship/avanzar/1. Domain Handler/wieldy-v-2.3.0/next-js-jwt-stater-kit/routes/AllDomain/index.js"],"names":["React","Table","Tag","Space","Column","ColumnGroup","AllDomain","use","data","age","map","tag","color","length","toUpperCase","text","record"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,KAArB,QAAkC,MAAlC;IACQC,M,GAAwBH,K,CAAxBG,M;IAAQC,W,GAAgBJ,K,CAAhBI,W;;AAEhB,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAEtBC,EAAAA,GAAG;AAEH,MAAMC,IAAI,GAAG,EAAb;AAEA,SACE,mBACE,MAAC,KAAD;AAAO,IAAA,UAAU,EAAEA;AAAnB,KACE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAC;AAAnB,KACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,WAAlC;AAA8C,IAAA,GAAG,EAAC;AAAlD,IADF,EAEE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,UAAlC;AAA6C,IAAA,GAAG,EAAC;AAAjD,IAFF,CADF,EAKJ,MAAC,MAAD;AACQ,IAAA,KAAK,EAAC,QADd;AAEQ,IAAA,SAAS,EAAC,KAFlB;AAGQ,IAAA,GAAG,EAAC,KAHZ;AAIQ,IAAA,MAAM,EAAE,gBAACC,GAAD;AAAA,aACN,4BACGA,GAAG,CAACC,GAAJ,CAAQ,UAACC,GAAD,EAAS;AAChB,YAAIC,KAAK,GAAGD,GAAG,CAACE,MAAJ,GAAa,CAAb,GAAiB,SAAjB,GAA6B,OAAzC;;AACA,YAAIF,GAAG,KAAK,OAAZ,EAAqB;AACnBC,UAAAA,KAAK,GAAG,MAAR;AACD;;AACD,eACE,MAAC,GAAD;AAAK,UAAA,KAAK,EAAEA,KAAZ;AAAmB,UAAA,GAAG,EAAED;AAAxB,WACGA,GAAG,CAACG,WAAJ,EADH,CADF;AAKD,OAVA,CADH,CADM;AAAA;AAJhB,IALI,EAyBE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,SAAS,EAAC,SAA/B;AAAyC,IAAA,GAAG,EAAC;AAA7C,IAzBF,EA8CJ,MAAC,WAAD;AAAa,IAAA,KAAK,EAAC;AAAnB,KACQ,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAmB,IAAA,SAAS,EAAC,IAA7B;AAAkC,IAAA,GAAG,EAAC;AAAtC,IADR,EAEQ,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAmB,IAAA,SAAS,EAAC,IAA7B;AAAkC,IAAA,GAAG,EAAC;AAAtC,IAFR,CA9CI,EAkDJ,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,SAAlC;AAA4C,IAAA,GAAG,EAAC;AAAhD,IAlDI,EAmDJ,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,SAAlC;AAA4C,IAAA,GAAG,EAAC;AAAhD,IAnDI,EAoDJ,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAA6B,IAAA,SAAS,EAAC,SAAvC;AAAiD,IAAA,GAAG,EAAC;AAArD,IApDI,EAqDE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,GAAG,EAAC,QAFN;AAGE,IAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,MAAP;AAAA,aACN,MAAC,KAAD;AAAO,QAAA,IAAI,EAAC;AAAZ,SACE,wBADF,EAEE,wBAFF,EAGE,0BAHF,CADM;AAAA;AAHV,IArDF,CADF,CADF;AAqED,CA3ED;;KAAMV,S;AA6EN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nconst AllDomain = () => {\r\n\r\n  use\r\n\r\n  const data = [];\r\n\r\n  return (\r\n    <div>\r\n      <Table dataSource={data}>\r\n        <ColumnGroup title=\"Domain Name\">\r\n          <Column title=\"Company\" dataIndex=\"firstName\" key=\"firstName\"/>\r\n          <Column title=\"Website\" dataIndex=\"lastName\" key=\"lastName\" />\r\n        </ColumnGroup>\r\n\t\t<Column\r\n          title=\"Status\"\r\n          dataIndex=\"age\"\r\n          key=\"age\"\r\n          render={(age) => (\r\n            <>\r\n              {age.map((tag) => {\r\n                let color = tag.length > 6 ? \"volcano\" : \"green\";\r\n                if (tag === \"loser\") {\r\n                  color = \"blue\";\r\n                }\r\n                return (\r\n                  <Tag color={color} key={tag}>\r\n                    {tag.toUpperCase()}\r\n                  </Tag>\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        />\r\n        <Column title=\"Type\" dataIndex=\"address\" key=\"address\" />\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={(tags) => (\r\n            <>\r\n              {tags.map((tag) => {\r\n                let color = tag.length > 5 ? \"geekblue\" : \"purple\";\r\n                if (tag === \"loser\") {\r\n                  color = \"blue\";\r\n                }\r\n                return (\r\n                  <Tag color={color} key={tag}>\r\n                    {tag.toUpperCase()}\r\n                  </Tag>\r\n                );\r\n              })}\r\n            </>\r\n          )}\r\n        /> */}\r\n\t\t<ColumnGroup title=\"DA | DR\">\r\n          <Column title=\"DA\" dataIndex=\"DA\" key=\"DA\"/>\r\n          <Column title=\"DR\" dataIndex=\"DR\" key=\"DR\" />\r\n        </ColumnGroup>\r\n\t\t<Column title=\"Quality\" dataIndex=\"address\" key=\"address\" />\r\n\t\t<Column title=\"Traffic\" dataIndex=\"address\" key=\"address\" />\r\n\t\t<Column title=\"Sample Links\" dataIndex=\"address\" key=\"address\" />\r\n        <Column\r\n          title=\"Action\"\r\n          key=\"action\"\r\n          render={(text, record) => (\r\n            <Space size=\"middle\">\r\n              <a>View</a>\r\n              <a>Edit</a>\r\n              <a>Delete</a>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllDomain;\r\n"]},"metadata":{},"sourceType":"module"}