{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { Select } from \"antd\";\nimport Router from \"next/router\";\nvar Option = Select.Option;\nimport { useRouter } from \"next/router\";\n\nvar Update = function Update() {\n  _s();\n\n  var router = useRouter();\n  var updateID = router.query.updateID;\n\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      status = _useState3[0],\n      setStatus = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      Da = _useState4[0],\n      setDA = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      Dr = _useState5[0],\n      setDR = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      Url = _useState6[0],\n      setURL = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      quantity = _useState7[0],\n      setQuantity = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      linkA = _useState8[0],\n      setLinkA = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      linkB = _useState9[0],\n      setLinkB = _useState9[1];\n\n  var _useState10 = useState(\"\"),\n      linkC = _useState10[0],\n      setLinkC = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      linkD = _useState11[0],\n      setLinkD = _useState11[1];\n\n  var _useState12 = useState(\"\"),\n      linkE = _useState12[0],\n      setLinkE = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      linkF = _useState13[0],\n      setLinkF = _useState13[1];\n\n  var _useState14 = useState(\"\"),\n      linkG = _useState14[0],\n      setLinkG = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      linkH = _useState15[0],\n      setLinkH = _useState15[1];\n\n  var _useState16 = useState(\"\"),\n      linkI = _useState16[0],\n      setLinkI = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      linkJ = _useState17[0],\n      setLinkJ = _useState17[1];\n\n  var _useState18 = useState(\"\"),\n      domainComments = _useState18[0],\n      setDomainComments = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      linkType = _useState19[0],\n      setLinkType = _useState19[1];\n\n  var _useState20 = useState(\"\"),\n      linkAttribute = _useState20[0],\n      setLinkAttribute = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      refDomains = _useState21[0],\n      setRefDomains = _useState21[1];\n\n  var _useState22 = useState(\"\"),\n      industry = _useState22[0],\n      setIndustry = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      trafficCountry = _useState23[0],\n      setTrafficCountry = _useState23[1];\n\n  var _useState24 = useState(\"\"),\n      semrush = _useState24[0],\n      setSemrush = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      ahref = _useState25[0],\n      setAhref = _useState25[1];\n\n  var _useState26 = useState(\"\"),\n      currency = _useState26[0],\n      setCurrency = _useState26[1];\n\n  var _useState27 = useState(\"\"),\n      original = _useState27[0],\n      setOriginal = _useState27[1];\n\n  var _useState28 = useState(\"\"),\n      negotiated = _useState28[0],\n      setNegotiated = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      officeCountry = _useState29[0],\n      setOfficeCountry = _useState29[1];\n\n  var _useState30 = useState(\"\"),\n      costComments = _useState30[0],\n      setCostComments = _useState30[1];\n\n  var _useState31 = useState(\"\"),\n      contactDetailsName = _useState31[0],\n      setContactDetailsName = _useState31[1];\n\n  var _useState32 = useState(\"\"),\n      contactEmailA = _useState32[0],\n      setContactEmailA = _useState32[1];\n\n  var _useState33 = useState(\"\"),\n      contactEmailB = _useState33[0],\n      setContactEmailB = _useState33[1];\n\n  var _useState34 = useState(\"\"),\n      contactEmailC = _useState34[0],\n      setContactEmailC = _useState34[1];\n\n  var _useState35 = useState(\"\"),\n      contactPhoneA = _useState35[0],\n      setContactPhoneA = _useState35[1];\n\n  var _useState36 = useState(\"\"),\n      contactPhoneB = _useState36[0],\n      setContactPhoneB = _useState36[1];\n\n  function handleChange(value) {\n    console.log(value, \"value\");\n    setStatus(value);\n  }\n\n  function handleChangeQuality(valueQuality) {\n    console.log(valueQuality, \"quality\");\n    setQuantity(valueQuality);\n  }\n\n  function handleChangeLinkType(valueLinkType) {\n    console.log(valueLinkType, \"linkType\");\n    setLinkType(valueLinkType);\n  }\n\n  function handleChangeLinkAttri(valueLinkAttri) {\n    console.log(valueLinkAttri, \"attribute\");\n    setLinkAttribute(valueLinkAttri);\n  }\n\n  function handleChangeCurr(valuecurr) {\n    console.log(valuecurr, \"currency\");\n    setCurrency(valuecurr);\n  }\n\n  function handleChangeMulti(valueCountry) {\n    console.log(valueCountry, \"industry\");\n    setIndustry(valueCountry.toString());\n  }\n\n  function handleChangeCountry(valueSingle) {\n    console.log(\"selected \".concat(valueSingle));\n    setOfficeCountry(valueSingle);\n  }\n\n  function handleChangeMultiOne(valueMultiOne) {\n    console.log(valueMultiOne, \"trafficC\");\n    setTrafficCountry(valueMultiOne.toString()); // let obj = { ...FormData };\n    // obj.Domain_traffic_Country = valueMultiOne.toString();\n    // setFormData({ ...obj });\n  }\n\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://localhost:5000/api/v1/domain/\".concat(updateID));\n\n              case 2:\n                res = _context.sent;\n                res.json().then(function (res) {\n                  setData(res); //   console.log(data[0]);\n\n                  setName(data[0].Domain_Name);\n                  setStatus(data[0].Domain_Status);\n                  setDA(data[0].Domain_DA);\n                  setDR(data[0].Domain_DR);\n                  setURL(data[0].Domain_URL);\n                  setQuantity(data[0].Domain_Quality);\n                  setLinkA(data[0].Domain_Link_SampleA);\n                  setLinkB(data[0].Domain_Link_SampleB);\n                  setLinkC(data[0].Domain_Link_SampleC);\n                  setLinkD(data[0].Domain_Link_SampleD);\n                  setLinkE(data[0].Domain_Link_SampleE);\n                  setLinkF(data[0].Domain_Link_SampleF);\n                  setLinkG(data[0].Domain_Link_SampleG);\n                  setLinkH(data[0].Domain_Link_SampleH);\n                  setLinkI(data[0].Domain_Link_SampleI);\n                  setLinkJ(data[0].Domain_Link_SampleJ);\n                  setDomainComments(data[0].Domain_Comments);\n                  setLinkType(data[0].Domain_Link_Type);\n                  setLinkAttribute(data[0].Domain_Link_Attribute);\n                  setRefDomains(data[0].Domain_RefDomCount);\n                  setIndustry(data[0].Domain_Industry);\n                  setTrafficCountry(data[0].Domain_traffic_Country);\n                  setSemrush(data[0].Domain_SEMRush);\n                  setAhref(data[0].Domain_AHRef);\n                  setCurrency(data[0].Domain_Currency);\n                  setOriginal(data[0].Domain_Cost_Original);\n                  setNegotiated(data[0].Domain_Cost_Nego);\n                  setOfficeCountry(data[0].Domain_Office_Country);\n                  setCostComments(data[0].Domain_Cost_Comments);\n                  setContactDetailsName(data[0].Domain_Contact_Person);\n                  setContactEmailA(data[0].Domain_Contact_EmailA);\n                  setContactEmailB(data[0].Domain_Contact_EmailB);\n                  setContactEmailC(data[0].Domain_Contact_EmailC);\n                  setContactPhoneA(data[0].Domain_Contact_PhoneA);\n                  setContactPhoneB(data[0].Domain_Contact_PhoneB);\n                })[\"catch\"](function (err) {\n                  return console.log(err);\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n\n  var postData = function postData() {\n    var requestOptions = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        Domain_Name: name,\n        Domain_Status: status,\n        Domain_DA: Da,\n        Domain_DR: Dr,\n        Domain_URL: Url,\n        Domain_Quality: quantity,\n        Domain_Link_SampleA: linkA,\n        Domain_Link_SampleB: linkB,\n        Domain_Link_SampleC: linkC,\n        Domain_Link_SampleD: linkD,\n        Domain_Link_SampleE: linkE,\n        Domain_Link_SampleF: linkF,\n        Domain_Link_SampleG: linkG,\n        Domain_Link_SampleH: linkH,\n        Domain_Link_SampleI: linkI,\n        Domain_Link_SampleJ: linkJ,\n        Domain_Comments: domainComments,\n        Domain_Link_Type: linkType,\n        Domain_Link_Attribute: linkAttribute,\n        Domain_RefDomCount: refDomains,\n        Domain_Industry: industry,\n        Domain_traffic_Country: trafficCountry,\n        Domain_SEMRush: semrush,\n        Domain_AHRef: ahref,\n        Domain_Currency: currency,\n        Domain_Cost_Original: original,\n        Domain_Cost_Nego: negotiated,\n        Domain_Office_Country: officeCountry,\n        Domain_Cost_Comments: costComments,\n        Domain_Contact_Person: contactDetailsName,\n        Domain_Contact_EmailA: contactEmailA,\n        Domain_Contact_EmailB: contactEmailB,\n        Domain_Contact_EmailC: contactEmailC,\n        Domain_Contact_PhoneA: contactPhoneA,\n        Domain_Contact_PhoneB: contactPhoneB\n      })\n    };\n    fetch(\"http://localhost:5000/api/v1/domain/\", requestOptions).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response) {\n        var data, error;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return response.json();\n\n              case 2:\n                data = _context2.sent;\n\n                if (response.ok) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                // get error message from body or default to response status\n                error = data && data.message || response.status;\n                return _context2.abrupt(\"return\", Promise.reject(error));\n\n              case 6:\n                console.log(\"data updated successfully\");\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }())[\"catch\"](function (error) {\n      _this.setState({\n        errorMessage: error.toString()\n      });\n\n      console.error(\"There was an error!\", error);\n    });\n    Router.push(\"all_domain\");\n  };\n\n  return __jsx(\"div\", null, console.log(updateID, \"ye hai query\"), data !== null ? __jsx(\"div\", null) : __jsx(\"p\", null, \"Something Wrong Happened\"));\n};\n\n_s(Update, \"YOEA6Iy3+fiqYwtw2ciK7kXDwY4=\", false, function () {\n  return [useRouter];\n});\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/webD course 2020/internship/avanzar/1. Domain Handler/wieldy-v-2.3.0/next-js-jwt-stater-kit/routes/Update/index.js"],"names":["React","useEffect","useState","Select","Router","Option","useRouter","Update","router","updateID","query","data","setData","name","setName","status","setStatus","Da","setDA","Dr","setDR","Url","setURL","quantity","setQuantity","linkA","setLinkA","linkB","setLinkB","linkC","setLinkC","linkD","setLinkD","linkE","setLinkE","linkF","setLinkF","linkG","setLinkG","linkH","setLinkH","linkI","setLinkI","linkJ","setLinkJ","domainComments","setDomainComments","linkType","setLinkType","linkAttribute","setLinkAttribute","refDomains","setRefDomains","industry","setIndustry","trafficCountry","setTrafficCountry","semrush","setSemrush","ahref","setAhref","currency","setCurrency","original","setOriginal","negotiated","setNegotiated","officeCountry","setOfficeCountry","costComments","setCostComments","contactDetailsName","setContactDetailsName","contactEmailA","setContactEmailA","contactEmailB","setContactEmailB","contactEmailC","setContactEmailC","contactPhoneA","setContactPhoneA","contactPhoneB","setContactPhoneB","handleChange","value","console","log","handleChangeQuality","valueQuality","handleChangeLinkType","valueLinkType","handleChangeLinkAttri","valueLinkAttri","handleChangeCurr","valuecurr","handleChangeMulti","valueCountry","toString","handleChangeCountry","valueSingle","handleChangeMultiOne","valueMultiOne","fetchData","fetch","res","json","then","Domain_Name","Domain_Status","Domain_DA","Domain_DR","Domain_URL","Domain_Quality","Domain_Link_SampleA","Domain_Link_SampleB","Domain_Link_SampleC","Domain_Link_SampleD","Domain_Link_SampleE","Domain_Link_SampleF","Domain_Link_SampleG","Domain_Link_SampleH","Domain_Link_SampleI","Domain_Link_SampleJ","Domain_Comments","Domain_Link_Type","Domain_Link_Attribute","Domain_RefDomCount","Domain_Industry","Domain_traffic_Country","Domain_SEMRush","Domain_AHRef","Domain_Currency","Domain_Cost_Original","Domain_Cost_Nego","Domain_Office_Country","Domain_Cost_Comments","Domain_Contact_Person","Domain_Contact_EmailA","Domain_Contact_EmailB","Domain_Contact_EmailC","Domain_Contact_PhoneA","Domain_Contact_PhoneB","err","postData","requestOptions","method","headers","body","JSON","stringify","response","ok","error","message","Promise","reject","setState","errorMessage","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Select } from \"antd\";\r\nimport Router from \"next/router\";\r\nconst { Option } = Select;\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst Update = () => {\r\n  const router = useRouter();\r\n\r\n  const {\r\n    query: { updateID },\r\n  } = router;\r\n\r\n  const [data, setData] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [Da, setDA] = useState(\"\");\r\n  const [Dr, setDR] = useState(\"\");\r\n  const [Url, setURL] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [linkA, setLinkA] = useState(\"\");\r\n  const [linkB, setLinkB] = useState(\"\");\r\n  const [linkC, setLinkC] = useState(\"\");\r\n  const [linkD, setLinkD] = useState(\"\");\r\n  const [linkE, setLinkE] = useState(\"\");\r\n  const [linkF, setLinkF] = useState(\"\");\r\n  const [linkG, setLinkG] = useState(\"\");\r\n  const [linkH, setLinkH] = useState(\"\");\r\n  const [linkI, setLinkI] = useState(\"\");\r\n  const [linkJ, setLinkJ] = useState(\"\");\r\n  const [domainComments, setDomainComments] = useState(\"\");\r\n  const [linkType, setLinkType] = useState(\"\");\r\n  const [linkAttribute, setLinkAttribute] = useState(\"\");\r\n  const [refDomains, setRefDomains] = useState(\"\");\r\n  const [industry, setIndustry] = useState(\"\");\r\n  const [trafficCountry, setTrafficCountry] = useState(\"\");\r\n  const [semrush, setSemrush] = useState(\"\");\r\n  const [ahref, setAhref] = useState(\"\");\r\n  const [currency, setCurrency] = useState(\"\");\r\n  const [original, setOriginal] = useState(\"\");\r\n  const [negotiated, setNegotiated] = useState(\"\");\r\n  const [officeCountry, setOfficeCountry] = useState(\"\");\r\n  const [costComments, setCostComments] = useState(\"\");\r\n  const [contactDetailsName, setContactDetailsName] = useState(\"\");\r\n  const [contactEmailA, setContactEmailA] = useState(\"\");\r\n  const [contactEmailB, setContactEmailB] = useState(\"\");\r\n  const [contactEmailC, setContactEmailC] = useState(\"\");\r\n  const [contactPhoneA, setContactPhoneA] = useState(\"\");\r\n  const [contactPhoneB, setContactPhoneB] = useState(\"\");\r\n\r\n  function handleChange(value) {\r\n    console.log(value, \"value\");\r\n    setStatus(value);\r\n  }\r\n\r\n  function handleChangeQuality(valueQuality) {\r\n    console.log(valueQuality, \"quality\");\r\n    setQuantity(valueQuality);\r\n  }\r\n  function handleChangeLinkType(valueLinkType) {\r\n    console.log(valueLinkType, \"linkType\");\r\n    setLinkType(valueLinkType);\r\n  }\r\n\r\n  function handleChangeLinkAttri(valueLinkAttri) {\r\n    console.log(valueLinkAttri, \"attribute\");\r\n    setLinkAttribute(valueLinkAttri);\r\n  }\r\n  function handleChangeCurr(valuecurr) {\r\n    console.log(valuecurr, \"currency\");\r\n    setCurrency(valuecurr);\r\n  }\r\n  function handleChangeMulti(valueCountry) {\r\n    console.log(valueCountry, \"industry\");\r\n    setIndustry(valueCountry.toString());\r\n  }\r\n\r\n  function handleChangeCountry(valueSingle) {\r\n    console.log(`selected ${valueSingle}`);\r\n    setOfficeCountry(valueSingle);\r\n  }\r\n  function handleChangeMultiOne(valueMultiOne) {\r\n    console.log(valueMultiOne, \"trafficC\");\r\n    setTrafficCountry(valueMultiOne.toString());\r\n    // let obj = { ...FormData };\r\n    // obj.Domain_traffic_Country = valueMultiOne.toString();\r\n    // setFormData({ ...obj });\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const res = await fetch(\r\n        `http://localhost:5000/api/v1/domain/${updateID}`\r\n      );\r\n      res\r\n        .json()\r\n        .then((res) => {\r\n          setData(res);\r\n        //   console.log(data[0]);\r\n          setName(data[0].Domain_Name);\r\n          setStatus(data[0].Domain_Status);\r\n          setDA(data[0].Domain_DA);\r\n          setDR(data[0].Domain_DR);\r\n          setURL(data[0].Domain_URL);\r\n          setQuantity(data[0].Domain_Quality);\r\n          setLinkA(data[0].Domain_Link_SampleA);\r\n          setLinkB(data[0].Domain_Link_SampleB);\r\n          setLinkC(data[0].Domain_Link_SampleC);\r\n          setLinkD(data[0].Domain_Link_SampleD);\r\n          setLinkE(data[0].Domain_Link_SampleE);\r\n          setLinkF(data[0].Domain_Link_SampleF);\r\n          setLinkG(data[0].Domain_Link_SampleG);\r\n          setLinkH(data[0].Domain_Link_SampleH);\r\n          setLinkI(data[0].Domain_Link_SampleI);\r\n          setLinkJ(data[0].Domain_Link_SampleJ);\r\n          setDomainComments(data[0].Domain_Comments);\r\n          setLinkType(data[0].Domain_Link_Type);\r\n          setLinkAttribute(data[0].Domain_Link_Attribute);\r\n          setRefDomains(data[0].Domain_RefDomCount);\r\n          setIndustry(data[0].Domain_Industry);\r\n          setTrafficCountry(data[0].Domain_traffic_Country);\r\n          setSemrush(data[0].Domain_SEMRush);\r\n          setAhref(data[0].Domain_AHRef);\r\n          setCurrency(data[0].Domain_Currency);\r\n          setOriginal(data[0].Domain_Cost_Original);\r\n          setNegotiated(data[0].Domain_Cost_Nego);\r\n          setOfficeCountry(data[0].Domain_Office_Country);\r\n          setCostComments(data[0].Domain_Cost_Comments);\r\n          setContactDetailsName(data[0].Domain_Contact_Person);\r\n          setContactEmailA(data[0].Domain_Contact_EmailA);\r\n          setContactEmailB(data[0].Domain_Contact_EmailB);\r\n          setContactEmailC(data[0].Domain_Contact_EmailC);\r\n          setContactPhoneA(data[0].Domain_Contact_PhoneA);\r\n          setContactPhoneB(data[0].Domain_Contact_PhoneB);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const postData = () => {\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        Domain_Name: name,\r\n        Domain_Status: status,\r\n        Domain_DA: Da,\r\n        Domain_DR: Dr,\r\n        Domain_URL: Url,\r\n        Domain_Quality: quantity,\r\n        Domain_Link_SampleA: linkA,\r\n        Domain_Link_SampleB: linkB,\r\n        Domain_Link_SampleC: linkC,\r\n        Domain_Link_SampleD: linkD,\r\n        Domain_Link_SampleE: linkE,\r\n        Domain_Link_SampleF: linkF,\r\n        Domain_Link_SampleG: linkG,\r\n        Domain_Link_SampleH: linkH,\r\n        Domain_Link_SampleI: linkI,\r\n        Domain_Link_SampleJ: linkJ,\r\n        Domain_Comments: domainComments,\r\n        Domain_Link_Type: linkType,\r\n        Domain_Link_Attribute: linkAttribute,\r\n        Domain_RefDomCount: refDomains,\r\n        Domain_Industry: industry,\r\n        Domain_traffic_Country: trafficCountry,\r\n        Domain_SEMRush: semrush,\r\n        Domain_AHRef: ahref,\r\n        Domain_Currency: currency,\r\n        Domain_Cost_Original: original,\r\n        Domain_Cost_Nego: negotiated,\r\n        Domain_Office_Country: officeCountry,\r\n        Domain_Cost_Comments: costComments,\r\n        Domain_Contact_Person: contactDetailsName,\r\n        Domain_Contact_EmailA: contactEmailA,\r\n        Domain_Contact_EmailB: contactEmailB,\r\n        Domain_Contact_EmailC: contactEmailC,\r\n        Domain_Contact_PhoneA: contactPhoneA,\r\n        Domain_Contact_PhoneB: contactPhoneB,\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:5000/api/v1/domain/\", requestOptions)\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        if (!response.ok) {\r\n          // get error message from body or default to response status\r\n          const error = (data && data.message) || response.status;\r\n          return Promise.reject(error);\r\n        }\r\n        console.log(\"data updated successfully\");\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ errorMessage: error.toString() });\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n    Router.push(\"all_domain\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {console.log(updateID, \"ye hai query\")}\r\n     {data!== null ? (<div></div>) : <p>Something Wrong Happened</p>}\r\n    </div>\r\n  );\r\n};\r\nexport default Update;\r\n"]},"metadata":{},"sourceType":"module"}