{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from '../reducers';\nimport { setAccessToken } from \"../../util/Utility\";\n\nvar bindMiddleware = function bindMiddleware(middleware) {\n  if (true) {\n    var _require = require('redux-devtools-extension'),\n        composeWithDevTools = _require.composeWithDevTools;\n\n    return composeWithDevTools(applyMiddleware.apply(void 0, _toConsumableArray(middleware)));\n  }\n\n  return applyMiddleware.apply(void 0, _toConsumableArray(middleware));\n};\n\nfunction configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var store = createStore(reducers, initialState, bindMiddleware([thunk]));\n  var currentState = store.getState();\n  store.subscribe(function () {\n    // keep track of the previous and current state to compare changesAppLayout/index.j\n    var previousState = currentState;\n    currentState = store.getState(); // if the token changes set the value in localStorage and axios headers\n\n    if (previousState.auth.token !== currentState.auth.token) {\n      var token = currentState.auth.token;\n      setAccessToken(token);\n    }\n  });\n  return store;\n}\n\nexport default configureStore;","map":{"version":3,"sources":["C:/Users/hp/Desktop/webD course 2020/internship/avanzar/1. Domain Handler/wieldy-v-2.3.0/next-js-jwt-stater-kit/redux/store/index.js"],"names":["applyMiddleware","createStore","thunk","reducers","setAccessToken","bindMiddleware","middleware","require","composeWithDevTools","configureStore","initialState","store","currentState","getState","subscribe","previousState","auth","token"],"mappings":";AAAA,SAAQA,eAAR,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAAQC,cAAR,QAA6B,oBAA7B;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,UAAU,EAAI;AACnC,YAA2C;AAAA,mBACXC,OAAO,CAAC,0BAAD,CADI;AAAA,QAClCC,mBADkC,YAClCA,mBADkC;;AAEzC,WAAOA,mBAAmB,CAACR,eAAe,MAAf,4BAAmBM,UAAnB,EAAD,CAA1B;AACD;;AACD,SAAON,eAAe,MAAf,4BAAmBM,UAAnB,EAAP;AACD,CAND;;AAQA,SAASG,cAAT,GAA2C;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AACzC,MAAMC,KAAK,GAAGV,WAAW,CACvBE,QADuB,EAEvBO,YAFuB,EAGvBL,cAAc,CAAC,CAACH,KAAD,CAAD,CAHS,CAAzB;AAKA,MAAIU,YAAY,GAAGD,KAAK,CAACE,QAAN,EAAnB;AACAF,EAAAA,KAAK,CAACG,SAAN,CAAgB,YAAM;AACpB;AACA,QAAIC,aAAa,GAAGH,YAApB;AACAA,IAAAA,YAAY,GAAGD,KAAK,CAACE,QAAN,EAAf,CAHoB,CAIpB;;AACA,QAAIE,aAAa,CAACC,IAAd,CAAmBC,KAAnB,KAA6BL,YAAY,CAACI,IAAb,CAAkBC,KAAnD,EAA0D;AACxD,UAAMA,KAAK,GAAGL,YAAY,CAACI,IAAb,CAAkBC,KAAhC;AACAb,MAAAA,cAAc,CAACa,KAAD,CAAd;AACD;AACF,GATD;AAUA,SAAON,KAAP;AACD;;AAED,eAAeF,cAAf","sourcesContent":["import {applyMiddleware, createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from '../reducers';\r\nimport {setAccessToken} from \"../../util/Utility\";\r\n\r\n\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const {composeWithDevTools} = require('redux-devtools-extension');\r\n    return composeWithDevTools(applyMiddleware(...middleware));\r\n  }\r\n  return applyMiddleware(...middleware);\r\n};\r\n\r\nfunction configureStore(initialState = {}) {\r\n  const store = createStore(\r\n    reducers,\r\n    initialState,\r\n    bindMiddleware([thunk])\r\n  );\r\n  let currentState = store.getState();\r\n  store.subscribe(() => {\r\n    // keep track of the previous and current state to compare changesAppLayout/index.j\r\n    let previousState = currentState;\r\n    currentState = store.getState();\r\n    // if the token changes set the value in localStorage and axios headers\r\n    if (previousState.auth.token !== currentState.auth.token) {\r\n      const token = currentState.auth.token;\r\n      setAccessToken(token);\r\n    }\r\n  });\r\n  return store;\r\n}\r\n\r\nexport default configureStore;\r\n"]},"metadata":{},"sourceType":"module"}