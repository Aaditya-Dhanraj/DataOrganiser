{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Table, Tag, Space } from \"antd\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\n\nconst AllDomain = () => {\n  const columns = [{\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"Age\",\n    dataIndex: \"age\",\n    key: \"age\"\n  }, {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\"\n  }, {\n    title: \"Tags\",\n    key: \"tags\",\n    dataIndex: \"tags\",\n    render: tags => __jsx(React.Fragment, null, tags.map(tag => {\n      let color = tag.length > 5 ? \"geekblue\" : \"green\";\n\n      if (tag === \"loser\") {\n        color = \"volcano\";\n      }\n\n      return __jsx(Tag, {\n        color: color,\n        key: tag\n      }, tag.toUpperCase());\n    }))\n  }, {\n    title: \"Action\",\n    key: \"action\",\n    render: (text, record) => __jsx(Space, {\n      size: \"middle\"\n    }, __jsx(\"a\", null, \"View\"), __jsx(\"a\", null, \"Edit\"), __jsx(\"a\", null, \"Delete\"))\n  }];\n  const data = [{\n    key: '1',\n    firstName: 'John',\n    lastName: 'Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    tags: ['nice', 'developer']\n  }, {\n    key: '2',\n    firstName: 'Jim',\n    lastName: 'Green',\n    age: 42,\n    address: 'London No. 1 Lake Park',\n    tags: ['loser']\n  }, {\n    key: '3',\n    firstName: 'Joe',\n    lastName: 'Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park',\n    tags: ['cool', 'teacher']\n  }];\n  return __jsx(\"div\", null);\n};\n\nexport default AllDomain;","map":{"version":3,"sources":["C:/Users/hp/Desktop/webD course 2020/internship/avanzar/1. Domain Handler/wieldy-v-2.3.0/next-js-jwt-stater-kit/routes/AllDomain/index.js"],"names":["React","Table","Tag","Space","Column","ColumnGroup","AllDomain","columns","title","dataIndex","key","render","tags","map","tag","color","length","toUpperCase","text","record","data","firstName","lastName","age","address"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,KAArB,QAAkC,MAAlC;AACA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAA0BJ,KAAhC;;AAEA,MAAMK,SAAS,GAAG,MAAM;AACtB,QAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,MAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADc,EAMd;AACEF,IAAAA,KAAK,EAAE,KADT;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GANc,EAWd;AACEF,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,SAAS,EAAE,SAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GAXc,EAgBd;AACEF,IAAAA,KAAK,EAAE,MADT;AAEEE,IAAAA,GAAG,EAAE,MAFP;AAGED,IAAAA,SAAS,EAAE,MAHb;AAIEE,IAAAA,MAAM,EAAGC,IAAD,IACN,4BACGA,IAAI,CAACC,GAAL,CAAUC,GAAD,IAAS;AACjB,UAAIC,KAAK,GAAGD,GAAG,CAACE,MAAJ,GAAa,CAAb,GAAiB,UAAjB,GAA8B,OAA1C;;AACA,UAAIF,GAAG,KAAK,OAAZ,EAAqB;AACnBC,QAAAA,KAAK,GAAG,SAAR;AACD;;AACD,aACE,MAAC,GAAD;AAAK,QAAA,KAAK,EAAEA,KAAZ;AAAmB,QAAA,GAAG,EAAED;AAAxB,SACGA,GAAG,CAACG,WAAJ,EADH,CADF;AAKD,KAVA,CADH;AALJ,GAhBc,EAoCd;AACET,IAAAA,KAAK,EAAE,QADT;AAEEE,IAAAA,GAAG,EAAE,QAFP;AAGEC,IAAAA,MAAM,EAAE,CAACO,IAAD,EAAOC,MAAP,KACN,MAAC,KAAD;AAAO,MAAA,IAAI,EAAC;AAAZ,OACE,wBADF,EAEE,wBAFF,EAGE,0BAHF;AAJJ,GApCc,CAAhB;AAkDA,QAAMC,IAAI,GAAG,CACd;AACEV,IAAAA,GAAG,EAAE,GADP;AAEEW,IAAAA,SAAS,EAAE,MAFb;AAGEC,IAAAA,QAAQ,EAAE,OAHZ;AAIEC,IAAAA,GAAG,EAAE,EAJP;AAKEC,IAAAA,OAAO,EAAE,0BALX;AAMEZ,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,WAAT;AANR,GADc,EASd;AACEF,IAAAA,GAAG,EAAE,GADP;AAEEW,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,QAAQ,EAAE,OAHZ;AAIEC,IAAAA,GAAG,EAAE,EAJP;AAKEC,IAAAA,OAAO,EAAE,wBALX;AAMEZ,IAAAA,IAAI,EAAE,CAAC,OAAD;AANR,GATc,EAiBd;AACEF,IAAAA,GAAG,EAAE,GADP;AAEEW,IAAAA,SAAS,EAAE,KAFb;AAGEC,IAAAA,QAAQ,EAAE,OAHZ;AAIEC,IAAAA,GAAG,EAAE,EAJP;AAKEC,IAAAA,OAAO,EAAE,wBALX;AAMEZ,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,SAAT;AANR,GAjBc,CAAb;AA2BA,SACE,kBADF;AAKD,CAnFD;;AAqFA,eAAeN,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Table, Tag, Space } from \"antd\";\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nconst AllDomain = () => {\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n\t},\r\n    {\r\n      title: \"Age\",\r\n      dataIndex: \"age\",\r\n      key: \"age\",\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      dataIndex: \"address\",\r\n      key: \"address\",\r\n    },\r\n    {\r\n      title: \"Tags\",\r\n      key: \"tags\",\r\n      dataIndex: \"tags\",\r\n      render: (tags) => (\r\n        <>\r\n          {tags.map((tag) => {\r\n            let color = tag.length > 5 ? \"geekblue\" : \"green\";\r\n            if (tag === \"loser\") {\r\n              color = \"volcano\";\r\n            }\r\n            return (\r\n              <Tag color={color} key={tag}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <a>View</a>\r\n          <a>Edit</a>\r\n          <a>Delete</a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n\r\n  const data = [\r\n\t{\r\n\t  key: '1',\r\n\t  firstName: 'John',\r\n\t  lastName: 'Brown',\r\n\t  age: 32,\r\n\t  address: 'New York No. 1 Lake Park',\r\n\t  tags: ['nice', 'developer'],\r\n\t},\r\n\t{\r\n\t  key: '2',\r\n\t  firstName: 'Jim',\r\n\t  lastName: 'Green',\r\n\t  age: 42,\r\n\t  address: 'London No. 1 Lake Park',\r\n\t  tags: ['loser'],\r\n\t},\r\n\t{\r\n\t  key: '3',\r\n\t  firstName: 'Joe',\r\n\t  lastName: 'Black',\r\n\t  age: 32,\r\n\t  address: 'Sidney No. 1 Lake Park',\r\n\t  tags: ['cool', 'teacher'],\r\n\t},\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllDomain;\r\n"]},"metadata":{},"sourceType":"module"}